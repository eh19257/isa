// Index
LDI r0 0

// Vector 2 offset
LDI r1 5

// Size of vectors
LDI r3 5

// Branch to jump to 
LDI r4 13

CMP r5 r0 r3
BZ r4 r5        

// Add Elements --> r6 has v[i]. r7 has u[i]
LD r6 r0
LDA r7 r1 r0
ADD r6 r6 r7

// Store result (r6) back into the memory
STO r0 r6

// Increment Index
ADDI r0 r0 1

// Jumps back
LDI r10 4
JMP r10
HALT
